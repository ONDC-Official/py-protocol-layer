version: "2.4"

services:

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bap-protocol-webserver
    depends_on:
      - rabbitmq
      - mongo1
    environment:
      ENV: prod
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      MONGO_DATABASE_URL: ${MONGO_DATABASE_URL}
      BAP_URL: ${BAP_URL}
      CLIENT_WEBHOOK_ENDPOINT: ${CLIENT_WEBHOOK_ENDPOINT}
      BAP_PRIVATE_KEY: ${BAP_PRIVATE_KEY}
      BAP_UNIQUE_KEY_ID: ${BAP_UNIQUE_KEY_ID}
      BAP_PUBLIC_KEY: ${BAP_PUBLIC_KEY}
      BAP_ID: ${BAP_ID}
      VERIFICATION_ENABLE: ${VERIFICATION_ENABLE}
      FLASK_SERVER: "True"
      QUEUE_ENABLE: "False"
    expose:
      - 5555
    ports:
      - 5555:5555

  consumer:
    build:
      context: .
      dockerfile: dockerfile-consumer
    container_name: bap-protocol-consumer
    depends_on:
      - rabbitmq
      - mongo1
    environment:
      ENV: prod
      MONGO_DATABASE_URL: ${MONGO_DATABASE_URL}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      BAP_PRIVATE_KEY: ${BAP_PRIVATE_KEY}
      BAP_UNIQUE_KEY_ID: ${BAP_UNIQUE_KEY_ID}
      BAP_PUBLIC_KEY: ${BAP_PUBLIC_KEY}
      BAP_ID: ${BAP_ID}
      FLASK_SERVER: "False"

  rabbitmq:
    image: rabbitmq:3.10-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  mongo1:
    image: mongo:4.2
    container_name: mongo1
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "27017"]
    volumes:
      - ./data/mongo-1:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test: test $$(echo "rs.initiate({_id:'my-replica-set',members:[{_id:0,host:\"mongo1:27017\"},{_id:1,host:\"mongo2:27018\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s

  mongo2:
    image: mongo:4.2
    container_name: mongo2
    command: ["--replSet", "my-replica-set", "--bind_ip_all", "--port", "27018"]
    volumes:
      - ./data/mongo-2:/data/db
    ports:
      - 27018:27018